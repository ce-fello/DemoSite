[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Azul Systems, Inc. Java 13.0.11)
[debug] Load.defaultLoad until apply took 96.9992ms
[debug]           Load.loadUnit: plugins took 119.5667ms
[debug]           Load.loadUnit: defsScala took 0.3978ms
[debug] [Loading] Scanning directory C:\Users\75524\IdeaProjects\Queta-Sec\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\75524\IdeaProjects\Queta-Sec\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.7772 ms
[debug]               Load.resolveProject(queta-sec-build) took 68.8191ms
[debug]             Load.loadTransitive: finalizeProject(Project(id queta-sec-build, base: C:\Users\75524\IdeaProjects\Queta-Sec\project, plugins: List(<none>))) took 147.0506ms
[debug] [Loading] Done in C:\Users\75524\IdeaProjects\Queta-Sec\project, returning: (queta-sec-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 174.3962ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.3388ms
[debug]         Load.loadUnit(file:/C:/Users/75524/IdeaProjects/Queta-Sec/project/, ...) took 302.8575ms
[debug]       Load.apply: load took 587.2154ms
[debug]       Load.apply: resolveProjects took 16.7128ms
[debug]       Load.apply: finalTransforms took 100.6383ms
[debug]       Load.apply: config.delegates took 15.0887ms
[debug]       Load.apply: Def.make(settings)... took 622.7372ms
[debug]       Load.apply: structureIndex took 109.2221ms
[debug]       Load.apply: mkStreams took 1.729ms
[info] loading project definition from C:\Users\75524\IdeaProjects\Queta-Sec\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2362.1937ms
[debug]     Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\75524\IdeaProjects\Queta-Sec
[debug]       Load.loadUnit: mkEval took 4.7459ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\75524\IdeaProjects\Queta-Sec, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9318 ms
[info] loading settings for project queta-sec from build.sbt ...
[debug]         Load.resolveProject(queta-sec) took 9.0073ms
[debug]       Load.loadTransitive: finalizeProject(Project(id queta-sec, base: C:\Users\75524\IdeaProjects\Queta-Sec, plugins: List(<none>))) took 11.7082ms
[debug] [Loading] Done in C:\Users\75524\IdeaProjects\Queta-Sec, returning: (queta-sec)
[debug]     Load.loadUnit: loadedProjectsRaw took 2318.5597ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.8901ms
[debug]   Load.loadUnit(file:/C:/Users/75524/IdeaProjects/Queta-Sec/, ...) took 4695.4727ms
[debug] Load.apply: load took 4713.5338ms
[debug] Load.apply: resolveProjects took 0.0894ms
[debug] Load.apply: finalTransforms took 10.5776ms
[debug] Load.apply: config.delegates took 0.3857ms
[debug] Load.apply: Def.make(settings)... took 119.3691ms
[debug] Load.apply: structureIndex took 38.7204ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to Queta-Sec (in build file:/C:/Users/75524/IdeaProjects/Queta-Sec/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-159c95e8e3f372d714af
[debug] Writing bsp connection file
[info] started sbt server
